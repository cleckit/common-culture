trigger:
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

pool:
  vmImage: ubuntu-latest

variables:
  # Track your team's extensions/wrappers of common code
  # This tracks what useful code your team created that other teams might want to use
  # In real scenarios: you extend src/common in your team directory (sth/robert_common)
  # and other teams import your extensions when they find them useful

  COMMON_DIRECTORY: "sth/robert_common" # Your team's extensions to track
  TRACKING_FILE: "tracking.yaml" # YAML file storing cross-team usage analytics

stages:
  - stage: TrackCommonReuse
    displayName: Tracking Reused Common Code
    jobs:
      - job: TrackImports
        displayName: Inspect Imports and Update Tracking File
        steps:
          # STEP 1: Clone the repo
          - task: Checkout@1
            displayName: "Checkout the Repository"

          # STEP 2: Setup GitHub CLI for tracking
          - script: |
              echo "Installing GitHub CLI"
              curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
              sudo apt update && sudo apt install gh
            displayName: "Install GitHub CLI"

          # STEP 3: Run GitHub-native tracking analysis
          - script: |
              echo "Running GitHub-native tracking analysis"
              chmod +x scripts/github-track-usage.sh
              
              # Create usage report using GitHub APIs and git analysis
              echo "## 🔄 Common Code Usage Report $(date +%Y-%m-%d)" > usage_report.md
              echo "" >> usage_report.md
              
              # Analyze recent commits in common directory
              echo "### 📊 Recent Activity in $(COMMON_DIRECTORY):" >> usage_report.md
              git log --oneline --since="7 days ago" -- $(COMMON_DIRECTORY)/ | head -10 >> usage_report.md || echo "No recent changes" >> usage_report.md
              
              # Count internal usage
              echo "" >> usage_report.md
              echo "### 📈 Internal Usage Statistics:" >> usage_report.md
              total_files=$(find $(COMMON_DIRECTORY) -name "*.py" | wc -l)
              usage_count=$(grep -r "from sth.robert_common" . --include="*.py" | wc -l)
              echo "- Total Python files in common directory: $total_files" >> usage_report.md
              echo "- Internal import statements: $usage_count" >> usage_report.md
              
              # Show most imported modules
              echo "" >> usage_report.md
              echo "### 🏆 Most Used Modules:" >> usage_report.md
              grep -r "from sth.robert_common" . --include="*.py" | cut -d':' -f2 | cut -d' ' -f2 | sort | uniq -c | sort -nr | head -5 >> usage_report.md || echo "No usage found" >> usage_report.md
              
            displayName: "Generate Usage Report"
            env:
              GITHUB_TOKEN: $(System.AccessToken)

          # STEP 4: Store report as Azure DevOps artifact
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: 'usage_report.md'
              artifactName: 'common-code-usage-report'
              publishLocation: 'Container'
            displayName: "Publish Usage Report"